{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","helpers.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","getUserById","users","userId","find","getNewTodoId","todoIds","Math","max","username","preparedTodos","usersFromServer","App","useState","userSelect","setUserSelect","setTodos","setTitle","titleError","setTitleError","usersError","setUsersError","action","method","onSubmit","event","preventDefault","newTodo","Number","trim","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.336a9e7c.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/types';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { TodoWithUser } from '../../types/types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoWithUser } from '../../types/types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { Todo, User, TodoWithUser } from './types/types';\n\nexport const getUserById = (\n  users: User[],\n  userId: number,\n): User | null => (\n  users.find(user => user.id === userId) || null\n);\n\nexport const prepareTodos = (\n  todos: Todo[],\n  users: User[],\n): TodoWithUser[] => (\n  todos.map(todo => ({\n    ...todo,\n    user: getUserById(users, todo.userId),\n  }))\n);\n\nexport function getNewTodoId(todos: Todo[]) {\n  const todoIds = todos.map(todo => todo.id);\n  const maxId = Math.max(...todoIds);\n\n  return maxId + 1;\n}\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { FC, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { prepareTodos, getNewTodoId, getUserById } from './helpers';\nimport { TodoWithUser } from './types/types';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const preparedTodos = prepareTodos(todosFromServer, usersFromServer);\n\nexport const App: FC = () => {\n  const [userSelect, setUserSelect] = useState(0);\n  const [todos, setTodos] = useState(preparedTodos);\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [usersError, setUsersError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!userSelect) {\n      setUsersError(true);\n    }\n\n    if (!userSelect || !title) {\n      return;\n    }\n\n    const newTodo: TodoWithUser = {\n      id: getNewTodoId(todos),\n      completed: false,\n      user: getUserById(usersFromServer, Number(userSelect)),\n      title: title.trim(),\n      userId: Number(userSelect),\n    };\n\n    setTodos([...todos, newTodo]);\n    setTitle('');\n    setUserSelect(0);\n  };\n\n  const handleChangeTitle = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleChangeUser = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setUserSelect(Number(event.target.value));\n    setUsersError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              id=\"title\"\n              name=\"title\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              id=\"user\"\n              value={userSelect}\n              onChange={handleChangeUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {usersError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}